# server配置
server.port=8080
#jersey.context-path= #/test/

#日志配置
logging.path=/var/log
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%p][%c][%M][%L] -> %m%n
logging.level.root=warn
logging.level.org.mybatis=trace
logging.level.org.springframework.web=debug
logging.level.com.phantom.sboot=debug

com.phantom.title=纯洁的微笑
com.phantom.description=分享生活和技术


###############################
###       单数据库配置        ###
###############################
# spring boot的jdbc模块会加载以下参数，并且根据url可以识别并自动加载mysql驱动，自动创建数据库实例，自动实现连接池
#spring.datasource.driverClassName = com.mysql.jdbc.Driver
#spring.datasource.url = jdbc:mysql://localhost:3306/springboot?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT
#spring.datasource.username = root
#spring.datasource.password = root

###############################
###        多数据库配置       ###
###############################
# 数据库1
spring.datasource.db1.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.db1.url=jdbc:mysql://localhost:3306/springboot?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT
spring.datasource.db1.username=root
spring.datasource.db1.password=root

# 数据库2
spring.datasource.db2.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.db2.url=jdbc:mysql://16.6.6.185:3306/gionee?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT
spring.datasource.db2.username=gionee
spring.datasource.db2.password=gionee123


# druid是和tomcat jdbc一样优秀的连接池，出自阿里巴巴。pom添加了依赖后，会自动用druid连接池替代默认的tomcat jdbc连接池
# 启动项目，访问http://localhost/druid/index.html，用户名和密码就是配置的内容
#默认为stat,即开启sql监控。这里加了个wall,表示同时开启sql防火墙
spring.datasource.druid.filters=stat,wall
#spring监控，com.phantom.sboot.controller是我的控制层包名，也可以是服务层，用逗号分隔多个监控内容
#spring.datasource.druid.aop-patterns=com.phantom.sboot.dao#监控页面登录用户名
spring.datasource.druid.StatViewServlet.loginUsername=admin
#监控页面登录密码
spring.datasource.druid.StatViewServlet.loginPassword=123
druid.type=com.alibaba.druid.pool.DruidDataSource


# mybatis相关配置
mybatis.type-aliases-package=com.phantom.sboot.entity
mybatis.config-locations=classpath:config/mybatis-config.xml
mybatis.mapper-locations=classpath:mapper/*.xml

# REDIS (RedisProperties)
# Redis数据库索引(默认为0)
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码(默认为空)
spring.redis.password=
# 连接池最大连接数(使用负值表示没有限制)
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间(使用负值表示没有限制)
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间(毫秒)
spring.redis.timeout=0


# 通常修改代码是连续性的修改，并不需要每改一点就重启一次，
# 在properties进行配置可以关闭自动重启，实现手动重启
# trigger.txt是我自创的一个文件，没有内容
# 此时修改一处代码不会重启，等全部代码都修改完后再修改trigger.txt文件就可以触发重启。
# 如果没有修改过代码，只修改trigger.txt，不会重启
spring.devtools.restart.trigger-file=trigger.txt
spring.devtools.remote.secret=springBootSecret

#pagehelper分页插件配置
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

###############################
### Thymeleaf Configuration ###
###############################
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
#spring.thymeleaf.mode=HTML5
#spring.thymeleaf.encoding=UTF-8
# ;charset=<encoding> is added
#spring.thymeleaf.content-type=text/html
# set to false for hot refresh
# 关闭thymeleaf的缓存，不然在开发中修改页面不会立刻生效需要重启，生产可配置为true。
spring.thymeleaf.cache=false







